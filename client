#!/bin/bash

function client_sendMessage #Fonction qui permet au client d'envoyer un message au serveur
{
	local ADDRESS=${1}
	local PORT=${2}
	local MESSAGE=${3}

	echo -ne ${MESSAGE} | nc -N ${ADDRESS} ${PORT}
	while [[ $? -eq 1 ]]
	do 
		echo -n ${MESSAGE} | nc -N ${ADDRESS} ${PORT}
	done
}
client_sendMessage "127.0.0.1" 1666 " " #Initailisation de la conversation
RECEIVED=$(nc -l 1666)

echo ${RECEIVED}
RECEIVED=$(nc -l 1666)

echo ${RECEIVED}
RECEIVED=$(nc -l 1666)

echo $BOUCLAGE

while [[ $BOUCLAGE -eq 0 ]] #Tant que bouclage = 0
do

	read ID #lecture du terminal pour l'identifiant

	ID=$(echo $ID | tr 'A-Za-z' 'N-ZA-Mn-za-m') # Cryptage de l'identifiant

	client_sendMessage "127.0.0.1" 1666 $ID
	RECEIVED=$(nc -l 1666)
	echo ${RECEIVED}

	read MDP #lecture du terminal pour le mot de passe

	MDP=$(echo $MDP | tr 'A-Za-z' 'N-ZA-Mn-za-m') # Cryptage du mot de passe
# Cryptage du mot de passe
	client_sendMessage "127.0.0.1" 1666 $MDP
	RECEIVED=$(nc -l 1666)
	echo ${RECEIVED}

	BOUCLAGE=$(nc -l 1666)


done

#Code jeu coté client

noir='\e[0;30m'
gris='\e[1;30m'
rougefonce='\e[0;31m'
rose='\e[1;31m'
vertfonce='\e[0;32m'
vertclair='\e[1;32m'
orange='\e[0;33m'
jaune='\e[1;33m'
bleufonce='\e[0;34m'
bleuclair='\e[1;34m'
violetfonce='\e[0;35m'
violetclair='\e[1;35m'
cyanfonce='\e[0;36m'
cyanclair='\e[1;36m'
grisclair='\e[0;37m'
blanc='\e[1;37m'

neutre='\e[0;m'
# Paramètres


taille=50
vies=3
player=1
score=-49

for ((i=0; $taille-$i ; i++)) 
do # Déclaration du tableau 
    screen[$i]=0 #remplisage avec des zeros
done 

clear

# Fonctions 
function colorGenerator
{  #replissage en fonction de la case d'avant
if [[ $1 -eq 0 ]]
	then
		if [[ $RANDOM%3 -gt 1 ]]
			then
				echo '0'
			else
				if [[ $RANDOM%2 -gt 0 ]]
					then
						echo '1'
					else
						echo '2'
				fi
		fi
fi
if [[ $1 -eq 1 ]]
	then
		if [[ $RANDOM%2 -gt 0 ]]
			then
				echo '1'
			else
				echo '0'
		fi
fi
if [[ $1 -eq 2 ]] 
	then
		if [[ $RANDOM%2 -gt 0 ]]
			then
				echo '2'
			else
				echo '0'
		fi
fi
}



function playerTurn
{ 
	var=$1
	timeDebut=$(date +%s%n) #on recupere le temps
    read -s -n1 -t 0.2 var #on attend l'entrée du joueur
	timeFin=$(date +%s%n) #on recupere le temps
	tps=$(echo "0.2-($(($timeFin-$timeDebut))/1000000)" | bc) #on attend pendant le temps qu'il restait au joueur
	#echo $tps >> saer.txt
	sleep $tps
	if [[ ( "$var" == "1") || ( "$var" == "2" ) ]]
		then  #on revoie la nouvelle valeur pour la fleche
			echo $var
		else
			echo $1
	fi
}

function hitbox
{  #on verifie que le joueur est de la meme couleur
	if [[ $2 -eq 0 ]]
		then 
			echo 0
		else
		if [[ $1 -eq $2 ]]
			then
				echo 0
			else 
				echo 1
		fi
	fi
}

function center
{  #on aligne au centre
	height=$(tput lines)
	lenght=$(tput cols)
	for((j=0; j<(height/2)-1; j++))
	do #on place les retours a la ligne
		echo ""
	done
	for((j=0; j<(lenght/2)-52; j++))  
	do #on place les espaces
		echo -ne " "
	done
}

function affichage()
{
    echo -e "${screen[@]}"
	#on affiche le tableau
}

function decalage()
{		#on deplace les cases vers la gauche pour faire avancer le jeu
    for ((i=0; i < $taille - 1  ; i++))
    do
        screen[$i]=${screen[$(( $i + 1 ))]}
    done
    screen[49]=$(colorGenerator ${screen[48]}) #on créé la nouvelle valeur
}


function lecteur
{
#on modifie les numéro par des carrés et les fleches pour rendre le jeu plus beau
		if [[ $1 -eq 1 ]]
		then
			echo -ne  "${bleuclair}▶${neutre}"


		fi
		if [[ $1 -eq 2 ]]
			then
				echo -ne  "${rougefonce}▶${neutre}"
		fi


	for ((i=0; i < $taille  ; i++))
	do
		if [[ screen[$i] -eq 0 ]]
			then
				echo -ne  "${blanc}⬛${neutre}"
		fi
		if [[ screen[$i] -eq 1 ]]
			then
				echo -ne  "${bleuclair}⬛${neutre}"
		fi
		if [[ screen[$i] -eq 2 ]]
			then
				echo -ne  "${rougefonce}⬛${neutre}"
		fi


	done
	echo ""
}

#Boucle principale
while [[ $vie -gt -4 ]] 
	do
		clear
		center
		decalage	
		lecteur $player
		score=$(($score+1))
		vieAff=$(echo "$vie+4" | bc)
		if [[ $score -gt 0 ]]
		then
			echo "score = $score      vie = $vieAff"
		fi
		player=$(playerTurn $player)
		vie=$(echo "$vie-$(hitbox $player ${screen[0]})" | bc)
	done
	clear 
	center
	echo "You DIED"
	client_sendMessage "127.0.0.1" 1666 $score
rec=$(head -n1 record.txt)

#Demande du pseudo si record battu
if [[ $score -gt $rec ]]
then
	echo $(nc -l 1666)
	read name
	client_sendMessage "127.0.0.1" 1666 $name
fi	

#Affichage du record envoyé par le serveur
echo -ne $(nc -l 1666)
echo -ne " "
echo -ne $(nc -l 1666)
echo -ne " "
echo -ne $(nc -l 1666)
echo -ne " "
echo -ne $(nc -l 1666)	
read -n1 -t 5
	
#Fin et score 



#lecteur
#decalage
